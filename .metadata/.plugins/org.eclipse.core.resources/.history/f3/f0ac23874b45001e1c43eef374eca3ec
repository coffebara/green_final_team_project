package com.itdaLearn.service;

import javax.persistence.EntityNotFoundException;
import javax.transaction.Transactional;

import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import antlr.StringUtils;
import lombok.RequiredArgsConstructor;
import lombok.Value;

@Service
@RequiredArgsConstructor
@Transactional
public class CourseImgService {
	@Value("${itemImgLocation}")
	private String itemImgLocation;
	//상품 이미지를 업로드하고, 상품 이미지 정보를 저장하는 클래스
	// itemImgLocation=C:/shop/item
	private final ItemImgRepository itemImgRepository;
	
	private final FileService fileService;
//상품 이미지를 저장하는 역할을 합니다
	public void saveItemImg(ItemImg itemImg, MultipartFile itemImgFile) throws Exception{
		String oriImgName = itemImgFile.getOriginalFilename();//사용자가 업로드하는 파일의 이름입니다.
		String imgName = "";
		String imgUrl = "";
		//파일 업로드
		if(!StringUtils.isEmpty(oriImgName)) {
			imgName = fileService.uploadFile(itemImgLocation, oriImgName, itemImgFile.getBytes());
			imgUrl = "/images/item/" + imgName; //저장한 상품 이미지를 불러올 경로를 설정
		}
		//상품 이미지 정보 저장
		itemImg.updateItemImg(oriImgName, imgName, imgUrl);
		itemImgRepository.save(itemImg);//입력받은 상품 이미지 정보를 저장
	}
	public void updateItemImg(Long itemImgId, MultipartFile itemImgFile) throws Exception{
		if(!itemImgFile.isEmpty()) {
			ItemImg savedItemImg = itemImgRepository.findById(itemImgId)
									.orElseThrow(EntityNotFoundException::new);
			//기존 이미지 파일 삭제
			if(!StringUtils.isEmpty(savedItemImg.getImgName())) {
				fileService.deleteFile(itemImgLocation+"/"+savedItemImg.getImgName());
			}
			String oriImgName = itemImgFile.getOriginalFilename();
			String imgName = fileService.uploadFile(itemImgLocation,  oriImgName, itemImgFile.getBytes()); 
			String imgUrl = "/images/item/" + imgName;
			savedItemImg.updateItemImg(oriImgName,  imgName,  imgUrl);
		}// imgName: 실제 로컬 저장된 상품 이미지 파일의 이름
	}// 	orgImgName: 업로드했던 상품 이미지 파일의 원래 이름
}//			imgUrl: 업로드 결과 로컬에 저장된 상품 이미지 파일을 불러오는 과정
